function CURRENT_zv_to_current_interpolate___ATEST
    
    % Submit data series as 2D vector.
    % Good for testing algorithm, but not input format.
    newTest2    = @(t1_zvIBIASx1, t2_zvIBIASx2, duplicatesAnomaly) (EJ_library.atest.CompareFuncResult(...
        @EJ_library.so.CURRENT_zv_to_current_interpolate, ...
        {t1_zvIBIASx1(:,1), t1_zvIBIASx1(:,2), t2_zvIBIASx2(:,1)}, ...
        {t2_zvIBIASx2(:,2), duplicatesAnomaly}));
    
    newTestExc2 = @(t1_zvIBIASx1, t2) (EJ_library.atest.CompareFuncResult(...
        @EJ_library.so.CURRENT_zv_to_current_interpolate, ...
        {t1_zvIBIASx1(:,1), t1_zvIBIASx1(:,2), t2}, 'MException'));
    
    tl = {};
    
    % General tests. Includes values before & after data time range.
    % No duplicate anomaly.
    tl{end+1} = newTest2([...
        0,  11; ...
        1, NaN; ...
        2, NaN; ...
        3,  12; ...
        4, NaN; ...
        5, NaN ...
        ], [...
        -1, NaN; ...
        0,  11; ...
        1,  11; ...
        2,  11; ...
        3,  12; ...
        4,  12; ...
        5,  12; ...
        6,  12], ...
        0);
    
    % Has duplicate anomaly.
    tl{end+1} = newTest2([...
        0,  11; ...
        0,  11; ...
        1, NaN; ...
        1, NaN; ...
        2, NaN; ...
        2, NaN; ...
        3,  12; ...
        4, NaN; ...
        5, NaN ...
        ], [ ...
        -1, NaN; ...
        0, 11; ...
        1, 11; ...
        2, 11; ...
        3, 12; ...
        4, 12; ...
        5, 12; ...
        6, 12], ...
        1);
    
    % Duplicate timestamps, but not duplicate bias (illegal always).
    tl{end+1} = newTestExc2([...
        0, 11; ...
        0, 10; ...
        1, NaN; ...
        2, NaN; ...
        3, NaN; ...
        4, 12; ...
        5, NaN], ...
        [-1:6]);
    
    % Sorted timestamps for the antenna, but not locally. ==> Exception (still)
    tl{end+1} = newTestExc2([...
        1,  11; ...
        0, NaN; ...
        2, NaN; ...
        3,  12; ...
        4, NaN; ...
        5, NaN ...
        ], ...
        [-1:6]);
    
    %tl{end+1} = 
    %tl{end+1} = 
    %tl{end+1} = 
    %tl{end+1} = 
    %tl{end+1} = 
    
    EJ_library.atest.run_tests(tl)
end
